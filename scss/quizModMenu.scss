@import 'mixin';
.quizModules
{
  /* ---- width et height dépendant du parent de la div, attention a bien définir la taille du parent---- */
  position: relative;
  width: 100%;
  height: 100%;
  @include flex(center, center, "");
  
  /* ---- button classe de la div regroupant les boutons .button-group ---- */
  .button-group
  {
    width: 90%;
    transform: translate(-50%, -50%);
    z-index: 2;
    @include positionTL(absolute, 20%, 50%);
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    button 
    {
      border: none;
      font-weight: 600;
      text-transform: capitalize;
      padding: 5px 10px;
      outline: none;
      margin: 5px;
    }
    
    .button:hover 
    {   
      // boutons au hover
    }
    .button:active,
    .button.is-checked 
    {
      // bouton sélectionné
    }
  }
  /* ---- ancre ---- */
  
  .ancreTop, .ancreDown
  {
    z-index: 24;
    i
    {
      font-size:25px;
      transition:.2s;
    }
    i:hover
    {
      
    }
  }
  .ancreTop
  {
    z-index: 25;
    @include positionBR(fixed, 20px, 10px);
  }
  .ancreDown
  {
    @include positionBR(fixed, 10px, 10px);
  }

  #end
  {
    @include positionBL(absolute, 0, 0);
  }
  /* ---- isotope ---- */
  
  .grid {
    position: absolute !important;
    top: 25%;
    .element-item {
      position: relative;
      width: 250px;
      height: 250px;
      margin: 50px 50px;
      padding: 10px;
      font-weight: 600;
      overflow: hidden;
      box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.2);
      @include flex(space-between, center, column);
      h3
      {
        position: relative;
        z-index: 2;
      }
      .tag
      {
        z-index: 2;
        @include positionTL(absolute, 5px, 5px);
      }
      .mod
      {
        z-index: 2;
        @include positionBL(absolute, 26%, 5px);
        @include flex(space-between, center, "");
        .spanQuiz
        {
          margin-left: 5px;
          a
          {
            transition: .2s;
          }
          a:hover
          {
          }
        }
        .btnlist
        {
          background: none;
          padding: 0;
          margin: 0;
          margin-left: 5px;
        }
        .btnlist:hover
        {
        }
        .list
        {
          width: 100px;
          height: 0px;
          margin: 0;
          padding: 0;
          overflow-y:scroll;
          transition: .2s;
          @include flex("", "", column);
          @include positionBR(absolute, 0%, -102px);
          li
          {
            position: relative;
            list-style: none;
            margin: 5px;
            @include flex(center, "", "");
            a
            {
              transition: .2s;
            }
            a:hover
            {
            }
          }
        }
        .list::-webkit-scrollbar {
          width: 2px;
          height: 2px;
        }
        .list::-webkit-scrollbar-thumb {
          border-radius: 100px;
        }
        .list::-webkit-scrollbar-thumb:hover {

        }
        .list::-webkit-scrollbar-thumb:active {
        }
        .list::-webkit-scrollbar-track {
          border-radius: 50px;
        }
        .list::-webkit-scrollbar-corner {
          background: transparent;
        }
        .listAppear
        {
          height: 120px;
        }
      }
      .score
      {
        z-index: 2;
        @include positionTR(absolute, 5px, 5px);
      }
      .imgQ
      {
        width: 100%;
        height: 75%;
        @include flex(center, center, column);
        @include positionTL(absolute,0,0);
        overflow: hidden;
        img
        {
          position: relative;
          max-width: 130%;
          height: auto;
          object-position: center;
        }
        .filter
        {
          width: 100%;
          height: 100%;
          @include positionTL(absolute, 0, 0);
        }
      }
      p
      {
        position: relative;
        padding: 5px 10px;
        transition: .2s;
        font-weight: 600;
        margin-bottom: 7px;
      }
      p:hover
      {
        cursor: pointer;
      }
    }
  }      
}